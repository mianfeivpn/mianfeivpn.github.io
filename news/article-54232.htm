<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://mianfeivpn.github.io/news/article-54232.htm" />
    <title>spring boot 导入导出</title>
        <meta name="description" content="private final static Logger logger = LoggerFactory.getLogger(ExcelUtils.class);     /**      * @para" />
        <meta charset="utf-8">
    <link rel="icon" href="/assets/website/img/androidclash/favicon.ico" type="image/x-icon"/>
    
    <meta name="author" content="免费VPN节点机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://mianfeivpn.github.io/news/article-54232.htm" />
    <meta property="og:site_name" content="免费VPN节点机场订阅官网" />
    <meta property="og:title" content="spring boot 导入导出" />
    <meta property="og:image" content="https://mianfeivpn.github.io/uploads/20240305/0a97bd4c2545df0d8fc2b2a4eeba6279.webp" />
        <meta property="og:release_date" content="2025-02-10T07:38:24" />
    <meta property="og:updated_time" content="2025-02-10T07:38:24" />
        <meta property="og:description" content="private final static Logger logger = LoggerFactory.getLogger(ExcelUtils.class);     /**      * @para" />
    
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="spring boot 导入导出">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/flaticon.css" rel="stylesheet" />
    <link href="/assets/website/css/androidclash/style.css" rel="stylesheet" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-DCKB1K87CW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-DCKB1K87CW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">免费VPN<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/free-nodes/" class="nav-link"><span>免费节点</span></a></li>
                                        <li class="nav-item"><a href="/paid-subscribe/" class="nav-link"><span>推荐机场</span></a></li>
                                        <li class="nav-item"><a href="/client.htm" class="nav-link"><span>客户端</span></a></li>
                                        <li class="nav-item"><a href="/news/" class="nav-link"><span>新闻资讯</span></a></li>
                                    </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" href="/assets/website/img/androidclash/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>spring boot 导入导出</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	                <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <pre><code class="prism language-css">    private final static Logger logger = LoggerFactory.<span class="token function">getLogger</span><span class="token punctuation">(</span>ExcelUtils.class<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/**      * @param list     导出的数据list      * @param clazz    导出的对象class      * @param fileName 导出的文件名称      * @param response reponse      * @param &lt;T&gt;      */</span>     <span class="token selector">public static &lt;T&gt; void exportExcel(List&lt;T&gt; list, Class&lt;T&gt; clazz, String fileName, HttpServletResponse response)</span> <span class="token punctuation">{<!-- --></span>         SXSSFWorkbook workBook = <span class="token function">getWorkBook</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">try</span> <span class="token punctuation">{<!-- --></span>             response.<span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.ms-excel;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response.<span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response.<span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> + URLEncoder.<span class="token function">encode</span><span class="token punctuation">(</span>fileName + <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             OutputStream output = response.<span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             BufferedOutputStream bufferedOutPut = new <span class="token function">BufferedOutputStream</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>             bufferedOutPut.<span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             workBook.<span class="token function">write</span><span class="token punctuation">(</span>bufferedOutPut<span class="token punctuation">)</span><span class="token punctuation">;</span>             bufferedOutPut.<span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token selector">catch (Exception e)</span> <span class="token punctuation">{<!-- --></span>             e.<span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>      <span class="token selector">private static &lt;T&gt; SXSSFWorkbook getWorkBook(List&lt;T&gt; list, Class&lt;T&gt; clazz)</span> <span class="token punctuation">{<!-- --></span>         SXSSFWorkbook wb = new <span class="token function">SXSSFWorkbook</span><span class="token punctuation">(</span>100<span class="token punctuation">)</span><span class="token punctuation">;</span>         Sheet sheet = wb.<span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Row row = sheet.<span class="token function">createRow</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>         row.<span class="token function">setHeightInPoints</span><span class="token punctuation">(</span>23<span class="token punctuation">)</span><span class="token punctuation">;</span>         Field[] declaredFields = <span class="token function">getAllFields</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>         //添加序号         Cell cellOrder = row.<span class="token function">createCell</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>         cellOrder.<span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"序号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         cellOrder.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">titleStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         sheet.<span class="token function">setColumnWidth</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 10 * 256<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">//设置表头         for (Field field : declaredFields)</span> <span class="token punctuation">{<!-- --></span>             Excel annotation = field.<span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel.class<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token selector">if (annotation != null)</span> <span class="token punctuation">{<!-- --></span>                 Cell cell = row.<span class="token function">createCell</span><span class="token punctuation">(</span>Integer.<span class="token function">valueOf</span><span class="token punctuation">(</span>annotation.<span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                 cell.<span class="token function">setCellValue</span><span class="token punctuation">(</span>annotation.<span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 cell.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">titleStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 //设置列的宽度                 sheet.<span class="token function">setColumnWidth</span><span class="token punctuation">(</span>Integer.<span class="token function">valueOf</span><span class="token punctuation">(</span>annotation.<span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token punctuation">(</span>int<span class="token punctuation">)</span>annotation.<span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> * 256<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         // 遍历集合数据，产生数据行         Iterator&lt;?&gt; it = list.<span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         int index = 0<span class="token punctuation">;</span>         <span class="token selector">while (it.hasNext())</span> <span class="token punctuation">{<!-- --></span>             index++<span class="token punctuation">;</span>             row = sheet.<span class="token function">createRow</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>             Cell cell = row.<span class="token function">createCell</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>             cell.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">orderStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             cell.<span class="token function">setCellValue</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>             row.<span class="token function">setHeightInPoints</span><span class="token punctuation">(</span>18<span class="token punctuation">)</span><span class="token punctuation">;</span>             T t = <span class="token punctuation">(</span>T<span class="token punctuation">)</span> it.<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             // 利用反射，根据javabean属性的先后顺序，动态调用<span class="token function">getXxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法得到属性值             Field[] fields = <span class="token function">getAllFields</span><span class="token punctuation">(</span>t.<span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token selector">for (Field field : fields)</span> <span class="token punctuation">{<!-- --></span>                 Excel annotation = field.<span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel.class<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token selector">if (annotation != null)</span> <span class="token punctuation">{<!-- --></span>                     cell = row.<span class="token function">createCell</span><span class="token punctuation">(</span>Integer.<span class="token function">valueOf</span><span class="token punctuation">(</span>annotation.<span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                     cell.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">contentStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String fieldName = field.<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String getMethodName = <span class="token string">"get"</span>                             + fieldName.<span class="token function">substring</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 1<span class="token punctuation">)</span>.<span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                             + fieldName.<span class="token function">substring</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token selector">try</span> <span class="token punctuation">{<!-- --></span>                         <span class="token selector">Method getMethod = t.getClass().getMethod(getMethodName,                                 new Class[]</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token selector">Object value = getMethod.invoke(t, new Object[]</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         cell.<span class="token function">setCellValue</span><span class="token punctuation">(</span>null == value ? <span class="token string">""</span> <span class="token punctuation">:</span> String.<span class="token function">valueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span> <span class="token selector">catch (Exception e)</span> <span class="token punctuation">{<!-- --></span>                         e.<span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         return wb<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">//设置标题样式     private static CellStyle titleStyle(SXSSFWorkbook wb)</span> <span class="token punctuation">{<!-- --></span>         CellStyle cellStyle = <span class="token function">contentStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置居中         cellStyle.<span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置单元格背景颜色         cellStyle.<span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors.GREY_25_PERCENT.<span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置单元格填充样式<span class="token punctuation">(</span>使用纯色背景颜色填充<span class="token punctuation">)</span>         cellStyle.<span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType.SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体加粗         Font font = wb.<span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         font.<span class="token function">setBold</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>         font.<span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span>short<span class="token punctuation">)</span> 12<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体         font.<span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         cellStyle.<span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>         return cellStyle<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">//设置单元格样式     private static CellStyle contentStyle(SXSSFWorkbook wb)</span> <span class="token punctuation">{<!-- --></span>         //给单元格设置样式         CellStyle cellStyle = wb.<span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Font font = wb.<span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体大小         font.<span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span>short<span class="token punctuation">)</span> 11<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体         font.<span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         //给字体设置样式         cellStyle.<span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>         //字体设置边框         cellStyle.<span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle.THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>         cellStyle.<span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle.THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置垂直居中         cellStyle.<span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>         return cellStyle<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">//设置单元格样式     private static CellStyle orderStyle(SXSSFWorkbook wb)</span> <span class="token punctuation">{<!-- --></span>         CellStyle cellStyle = <span class="token function">contentStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span>         cellStyle.<span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>         return cellStyle<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">private static &lt;T&gt; Field[] getAllFields(Class&lt;T&gt; clazz)</span> <span class="token punctuation">{<!-- --></span>         Field[] declaredFields = clazz.<span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Class superClass = clazz.<span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">if (!superClass.equals(Object.class))</span> <span class="token punctuation">{<!-- --></span>             Field[] superFields = superClass.<span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             int sonLength = declaredFields.length<span class="token punctuation">;</span>             int superLength = superFields.length<span class="token punctuation">;</span>             // 合并两个数组             Field[] newFields = new Field[sonLength + superLength]<span class="token punctuation">;</span>             System.<span class="token function">arraycopy</span><span class="token punctuation">(</span>declaredFields<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> newFields<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> sonLength<span class="token punctuation">)</span><span class="token punctuation">;</span>             System.<span class="token function">arraycopy</span><span class="token punctuation">(</span>superFields<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> newFields<span class="token punctuation">,</span> sonLength<span class="token punctuation">,</span> superLength<span class="token punctuation">)</span><span class="token punctuation">;</span>             return newFields<span class="token punctuation">;</span>         <span class="token punctuation">}</span>         return declaredFields<span class="token punctuation">;</span>     <span class="token punctuation">}</span>            private static final String XLS = <span class="token string">"xls"</span><span class="token punctuation">;</span>         private static final String XLSX = <span class="token string">"xlsx"</span><span class="token punctuation">;</span>          <span class="token comment">/**          * 根据文件后缀名类型获取对应的工作簿对象          * @param inputStream 读取文件的输入流          * @param fileType 文件后缀名类型（xls或xlsx）          * @return 包含文件数据的工作簿对象          * @throws IOException          */</span>         <span class="token selector">public static Workbook getWorkbook(InputStream inputStream, String fileType) throws IOException</span> <span class="token punctuation">{<!-- --></span>             Workbook workbook = null<span class="token punctuation">;</span>             <span class="token selector">if (fileType.equalsIgnoreCase(XLS))</span> <span class="token punctuation">{<!-- --></span>                 workbook = new <span class="token function">HSSFWorkbook</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token selector">else if (fileType.equalsIgnoreCase(XLSX))</span> <span class="token punctuation">{<!-- --></span>                 workbook = new <span class="token function">XSSFWorkbook</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             return workbook<span class="token punctuation">;</span>         <span class="token punctuation">}</span> </code></pre> <p>//导入</p> <pre><code class="prism language-css"> <span class="token selector">public void add(MultipartFile file)</span> <span class="token punctuation">{<!-- --></span>         String fileName = file.<span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         File file1 = new <span class="token function">File</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>         ImportParams params = new <span class="token function">ImportParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setTitleRows</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setHeadRows</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">;</span>          List&lt;Bill&gt; bills = ExcelImportUtil.<span class="token function">importExcel</span><span class="token punctuation">(</span>file1<span class="token punctuation">,</span> Bill.class<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">for (Bill bill : bills)</span> <span class="token punctuation">{<!-- --></span>             billlMapper.<span class="token function">insert</span><span class="token punctuation">(</span>bill<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> </code></pre> <pre><code>} //导出 </code></pre> <pre><code class="prism language-css">  <span class="token atrule"><span class="token rule">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/exportExcelDc"</span><span class="token punctuation">)</span>     public void <span class="token function">exportExcelDc</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> throws Exception</span> <span class="token punctuation">{<!-- --></span>          List&lt;Bill&gt; list = billService.<span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ExcelUtils.<span class="token function">exportExcel</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> Bill.class<span class="token punctuation">,</span> <span class="token string">"数据"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  </code></pre> <p>//另一种导出</p> <pre><code class="prism language-css">    <span class="token atrule"><span class="token rule">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/exportExcelDc1"</span><span class="token punctuation">)</span>     public void <span class="token function">exportExcelDc1</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> throws Exception</span> <span class="token punctuation">{<!-- --></span>         ExportParams params = new <span class="token function">ExportParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"年度账单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setSheetName</span><span class="token punctuation">(</span><span class="token string">"年度账单表"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setType</span><span class="token punctuation">(</span>ExcelType.XSSF<span class="token punctuation">)</span><span class="token punctuation">;</span>         List&lt;Bill&gt; list = billService.<span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          Workbook workbook = ExcelExportUtil.<span class="token function">exportExcel</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> Bill.class<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>         response.<span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.ms-excel;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         response.<span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         response.<span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> + URLEncoder.<span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"测试"</span> + <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         OutputStream output = response.<span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         BufferedOutputStream bufferedOutPut = new <span class="token function">BufferedOutputStream</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>         bufferedOutPut.<span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         workbook.<span class="token function">write</span><span class="token punctuation">(</span>bufferedOutPut<span class="token punctuation">)</span><span class="token punctuation">;</span>         bufferedOutPut.<span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <pre><code>// 注解   @Excel(name = "序号",orderNum = "0") </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-54231.htm">vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</a></p>
                                        <p>下一个：<a href="/news/article-54780.htm">Python3 MySQL 数据库连接</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-11-node-share-links.htm" title="2月11日免费VPN订阅 | 2025年21.1M/S|SSR/Clash/Shadowrocket/V2ray免费节点链接地址">2月11日免费VPN订阅 | 2025年21.1M/S|SSR/Clash/Shadowrocket/V2ray免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-53674.htm" title="宠物粮生产厂家排名榜前十名有哪些（宠物粮食生产厂家）">宠物粮生产厂家排名榜前十名有哪些（宠物粮食生产厂家）</a></li>
                        <li class="py-2"><a href="/news/article-52610.htm" title="怎么样正确使用动物疫苗视频（动物疫苗的使用方法及注意事项）">怎么样正确使用动物疫苗视频（动物疫苗的使用方法及注意事项）</a></li>
                        <li class="py-2"><a href="/news/article-50727.htm" title="Mysql执行流程详解">Mysql执行流程详解</a></li>
                        <li class="py-2"><a href="/news/article-53673.htm" title="springBoot过滤器、拦截器配置使用">springBoot过滤器、拦截器配置使用</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-8-free-v2ray.htm" title="2月8日免费VPN订阅 | 2025年18.9M/S|V2ray/SSR/Shadowrocket/Clash免费节点链接地址">2月8日免费VPN订阅 | 2025年18.9M/S|V2ray/SSR/Shadowrocket/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-54231.htm" title="vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)">vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</a></li>
                        <li class="py-2"><a href="/news/article-51580.htm" title="动物疫苗接种时间表最新消息图片 动物疫苗接种时间表最新消息图片大全">动物疫苗接种时间表最新消息图片 动物疫苗接种时间表最新消息图片大全</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-7-node-share-links.htm" title="2月7日免费VPN订阅 | 2025年22.9M/S|V2ray/Shadowrocket/Clash/SSR免费节点链接地址">2月7日免费VPN订阅 | 2025年22.9M/S|V2ray/Shadowrocket/Clash/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-52090.htm" title="狗狗送人领养怎么写告示（狗狗送人领养怎么写告示书）">狗狗送人领养怎么写告示（狗狗送人领养怎么写告示书）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">免费VPN节点机场订阅官网</a> 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/website/js/frontend/androidclash/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/popper.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.stellar.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/jquery.animateNumber.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/scrollax.min.js"></script>
    <script src="/assets/website/js/frontend/androidclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>